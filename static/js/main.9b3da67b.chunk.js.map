{"version":3,"sources":["Components/Statistics.jsx","Components/FeedbackOptions.jsx","Components/Notification.jsx","Components/Section.jsx","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","src","alt","FeedbackOptions","options","onLeaveFeedback","map","opt","type","onClick","Notification","message","Section","title","children","App","useState","setGood","setNeutral","setBad","countTotalFeedback","prevGood","prevNeutral","prevBad","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAmEeA,EAhEI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAIC,UAAU,iBAAd,UACE,oBAAIA,UAAU,iBAAd,SACE,oBAAGA,UAAU,gBAAb,UACE,qBACEC,IAAI,iEACJC,IAAI,gHACJF,UAAU,SAJd,YAMa,sBAAMA,UAAU,iBAAhB,SAAkCL,SAGjD,oBAAIK,UAAU,iBAAd,SACE,oBAAGA,UAAU,gBAAb,UACE,qBACEC,IAAI,iEACJC,IAAI,gHACJF,UAAU,SAJd,eAMgB,sBAAMA,UAAU,iBAAhB,SAAkCJ,SAGpD,oBAAII,UAAU,iBAAd,SACE,oBAAGA,UAAU,gBAAb,UACE,qBACEC,IAAI,iEACJC,IAAI,gHACJF,UAAU,SAJd,WAMY,sBAAMA,UAAU,iBAAhB,SAAkCH,SAGhD,oBAAIG,UAAU,iBAAd,SACE,oBAAGA,UAAU,gBAAb,UACE,qBACEC,IAAI,iEACJC,IAAI,gHACJF,UAAU,SAJd,aAMc,sBAAMA,UAAU,iBAAhB,SAAkCF,SAGlD,oBAAIE,UAAU,iBAAd,SACE,oBAAGA,UAAU,gBAAb,UACE,qBACEC,IAAI,iEACJC,IAAI,gHACJF,UAAU,SAJd,yBAOE,uBAAMA,UAAU,iBAAhB,UAAkCD,EAAlC,gBCrCOI,MAbf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAG,OACpB,wBAAQC,KAAK,SAAmBC,QAAS,kBAAMJ,EAAgBE,IAA/D,SACGA,GADwBA,OCQhBG,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mCACE,4BAAIA,OCUOC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKD,IACJC,M,MCqDUC,MApDf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNrB,EADM,KACAsB,EADA,OAEiBD,mBAAS,GAF1B,mBAENpB,EAFM,KAEGsB,EAFH,OAGSF,mBAAS,GAHlB,mBAGNnB,EAHM,KAGDsB,EAHC,KAsBPC,EAAqB,WACzB,OAAOzB,EAAOC,EAAUC,GAOtB,OACA,sBAAKG,UAAU,eAAf,UACE,cAAC,EAAD,CAASa,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBR,gBA5BH,SAAAE,GACpB,OAAQA,GACN,IAAK,OACHU,GAAQ,SAAAI,GAAQ,OAAIA,EAAW,KAC/B,MACF,IAAK,UACHH,GAAW,SAAAI,GAAW,OAAIA,EAAc,KACxC,MACF,IAAK,MACHH,GAAO,SAAAI,GAAO,OAAIA,EAAU,KAC5B,MACF,QACE,SAgBmDnB,QAAS,CAAC,OAAQ,UAAW,WAEhF,cAAC,EAAD,CAASS,MAAM,aAAf,SACGO,IACC,cAAC,EAAD,CACEzB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOsB,IACPrB,mBAfHyB,KAAKC,MAAc,IAAP9B,EAAcyB,OAkBzB,cAAC,EAAD,CAAcT,QAAQ,4BC/ClCe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9b3da67b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul className=\"statisticsList\">\n    <li className=\"statisticsItem\">\n      <p className=\"statisticName\">\n        <img\n          src=\"https://www.flaticon.com/svg/static/icons/svg/1933/1933691.svg\"\n          alt=\"Аватар пользователя\"\n          className=\"icon\"\n        />\n        Good:&nbsp;<span className=\"statisticValue\">{good}</span>\n      </p>\n    </li>\n    <li className=\"statisticsItem\">\n      <p className=\"statisticName\">\n        <img\n          src=\"https://www.flaticon.com/svg/static/icons/svg/1933/1933511.svg\"\n          alt=\"Аватар пользователя\"\n          className=\"icon\"\n        />\n        Neutral:&nbsp;<span className=\"statisticValue\">{neutral}</span>\n      </p>\n    </li>\n    <li className=\"statisticsItem\">\n      <p className=\"statisticName\">\n        <img\n          src=\"https://www.flaticon.com/svg/static/icons/svg/1933/1933823.svg\"\n          alt=\"Аватар пользователя\"\n          className=\"icon\"\n        />\n        Bad:&nbsp;<span className=\"statisticValue\">{bad}</span>\n      </p>\n    </li>\n    <li className=\"statisticsItem\">\n      <p className=\"statisticName\">\n        <img\n          src=\"https://www.flaticon.com/svg/static/icons/svg/1006/1006394.svg\"\n          alt=\"Аватар пользователя\"\n          className=\"icon\"\n        />\n        Total:&nbsp;<span className=\"statisticValue\">{total}</span>\n      </p>\n    </li>\n    <li className=\"statisticsItem\">\n      <p className=\"statisticName\">\n        <img\n          src=\"https://www.flaticon.com/svg/static/icons/svg/2694/2694943.svg\"\n          alt=\"Аватар пользователя\"\n          className=\"icon\"\n        />\n        Positive feedback:&nbsp;\n        <span className=\"statisticValue\">{positivePercentage}%</span>\n      </p>\n    </li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return options.map(opt => (\n    <button type=\"button\" key={opt} onClick={() => onLeaveFeedback(opt)}>\n      {opt}\n    </button>\n  ));\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => (\n  <>\n    <p>{message}</p>\n  </>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.object,\n};\n\nexport default Section;\n","import  { useState } from 'react';\nimport Statistics from './Components/Statistics';\nimport FeedbackOptions from './Components/FeedbackOptions';\nimport Notification from './Components/Notification';\nimport Section from './Components/Section';\nimport './Components/styles.css';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const leaveFeedback = opt => {\n    switch (opt) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1);\n        break;\n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good * 100) / countTotalFeedback());\n  };\n\n      return (\n      <div className=\"main-section\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={leaveFeedback} options={['good', 'neutral', 'bad']}/>\n        </Section>\n        <Section title=\"Statistics\">\n          {countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}